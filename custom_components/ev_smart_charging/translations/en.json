{
    "config": {
        "step": {
            "user": {
                "description": "Configuration of name and external entities.",
                "data": {
                    "device_name": "Name",
                    "price_sensor": "Electricity price sensor",
                    "ev_soc_sensor": "EV SOC entity",
                    "ev_target_soc_sensor": "EV Target SOC entity (single space to remove)",
                    "charger_entity": "Charger control switch (single space to remove)",
                    "ev_controlled": "An EV integration will control start/stop of charging",
                    "solar_charging_configured": "Configure charging using solar power"
                }
            },
            "solar": {
                "description": "Configuration of charging using solar power.",
                "data": {
                    "grid_usage_sensor": "Grid usage sensor [W]",
                    "grid_voltage": "Grid voltage [V]",
                    "max_charging_current": "Maximum charging current [A]",
                    "min_charging_current": "Minimum charging current [A]",
                    "default_charging_current": "Default (non-solar) charging current [A]",
                    "three_phase_charging": "Three-phase charging",
                    "solar_charging_off_delay": "Time delay for ending solar power based charging"
                }
            }
        },
        "error": {
            "price_not_found": "Electricity price sensor not found.",
            "price_not_sensor": "The Electricity price entity is not a sensor.",
            "sensor_is_not_price": "The Electricity price sensor does not have the needed attributes.",
            "ev_soc_not_found": "EV SOC entity not found.",
            "ev_soc_invalid_data": "The SOC entity gives invalid data.",
            "ev_target_soc_not_found": "EV Target SOC entity not found.",
            "ev_target_soc_invalid_data": "The Target SOC entity gives invalid data.",
            "charger_control_switch_not_found": "Charger control switch entity not found.",
            "charger_control_switch_not_switch": "Charger control switch entity is not a switch.",
            "grid_usage_not_found": "Grid usage sensor not found.",
            "grid_usage_invalid_data": "Grid usage entity gives invalid data."
        }
    },
    "options": {
        "step": {
            "init": {
                "description": "Configuration of external entities.",
                "data": {
                    "price_sensor": "Electricity price sensor",
                    "ev_soc_sensor": "EV SOC entity",
                    "ev_target_soc_sensor": "EV Target SOC entity (single space to remove)",
                    "charger_entity": "Charger control switch (single space to remove)",
                    "ev_controlled": "An EV integration will control start/stop of charging",
                    "solar_charging_configured": "Configure charging using solar power"
                }
            },
            "solar": {
                "description": "Configuration of charging using solar power.",
                "data": {
                    "grid_usage_sensor": "Grid usage sensor [W]",
                    "grid_voltage": "Grid voltage [V]",
                    "max_charging_current": "Maximum charging current [A]",
                    "min_charging_current": "Minimum charging current [A]",
                    "default_charging_current": "Default (non-solar) charging current [A]",
                    "three_phase_charging": "Three-phase charging",
                    "solar_charging_off_delay": "Time delay for ending solar power based charging"
                }
            }
        },
        "error": {
            "price_not_found": "Electricity price sensor not found.",
            "price_not_sensor": "The Electricity price entity is not a sensor.",
            "sensor_is_not_price": "The Electricity price sensor does not have the needed attributes.",
            "ev_soc_not_found": "EV SOC entity not found.",
            "ev_soc_invalid_data": "The SOC entity gives invalid data.",
            "ev_target_soc_not_found": "EV Target SOC entity not found.",
            "ev_target_soc_invalid_data": "The Target SOC entity gives invalid data.",
            "charger_control_switch_not_found": "Charger control switch entity not found.",
            "charger_control_switch_not_switch": "Charger control switch entity is not a switch.",
            "grid_usage_not_found": "Grid usage sensor not found.",
            "grid_usage_invalid_data": "Grid usage entity gives invalid data."
        }
    },
    "entity": {
        "button": {
            "manually_start_charging": { "name": "Manually start charging" },
            "manually_stop_charging": { "name": "Manually stop charging" }
        },
        "number": {
            "charging_speed": { "name": "Charging speed" },
            "electricity_price_limit": { "name": "Electricity price limit" },
            "opportunistic_level": { "name": "Opportunistic level" },
            "low_price_charging_level": { "name": "Low price charging level" },
            "low_soc_charging_level": { "name": "Low SOC charging level" },
            "minimum_ev_soc": { "name": "Minimum EV SOC" },
            "max_charging_current": { "name": "Maximum charging current" },
            "min_charging_current": { "name": "Minimum charging current" },
            "default_charging_current": { "name": "Default charging current" },
            "solar_charging_off_delay": { "name": "Solar charging off delay" }
        },
        "select": {
            "charge_start_time": { "name": "Charge start time" },
            "charge_completion_time": { "name": "Charge completion time" }
        },
        "sensor": {
            "charging": {
                "name": "Charging",
                "state_attributes": {
                    "current_price": { "name": "Current price"},
                    "ev_soc": {"name": "EV SOC"},
                    "ev_target_soc": {"name": "EV target SOC"},
                    "charging_is_planned": {"name": "Charging is planned"},
                    "charging_start_time": {"name": "Charging start time"},
                    "charging_stop_time": {"name": "Charging stop time"},
                    "charging_number_of_hours": {"name": "Charging number of hours"},
                    "raw_two_days": {"name": "Raw two days"},
                    "charging_schedule": {"name": "Charging schedule"}
                }
            },
            "charging_current": {
                "name": "Charging current"
            },
            "status": {
                "name": "Status",
                "state": {
                    "waiting_for_new_prices": "Waiting for new prices",
                    "no_charging_planned": "No charging planned",
                    "waiting_for_charging_to_begin": "Waiting for charging to begin",
                    "charging": "Charging",
                    "keeping_charger_on": "Keeping charger on",
                    "disconnected": "Disconnected",
                    "price_not_active": "Price based charging not active",
                    "smart_charging_not_active": "Smart charging not active",
                    "low_price_charging": "Low price charging",
                    "low_soc_charging": "Low SOC charging"
                }
            },
            "solar_status": {
                "name": "Solar charging status",
                "state": {
                    "smart_charging_not_active": "Smart charging not active",
                    "not_activated": "Not activated",
                    "disconnected": "Disconnected",
                    "waiting": "Waiting for solar power",
                    "charging": "Charging with solar power",
                    "charging_completed": "Charging completed"
                }
            }

        },
        "switch": {
            "smart_charging_activated": { "name": "Smart charging activated" },
            "apply_price_limit": { "name": "Apply price limit" },
            "continuous_charging_preferred": { "name": "Continuous charging preferred" },
            "ev_connected": { "name": "EV connected" },
            "keep_charger_on": { "name": "Keep charger on" },
            "opportunistic_charging": { "name": "Opportunistic charging" },
            "low_price_charging": { "name": "Low price charging" },
            "low_soc_charging": { "name": "Low SOC charging" },
            "three_phase_charging": { "name": "Three phase charging"},
            "price_charging_activated": { "name": "Price charging activated"},
            "solar_charging_activated": { "name": "Solar charging activated"}
        }
    }
}